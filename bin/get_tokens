#!/usr/bin/env ruby
# frozen_string_literal: true

require "base64"
require 'dotenv'
require 'httparty'

Dotenv.load('.env.test')

print "Let's get you an access token and a refresh token for Fortnox API."

client_id = ENV.fetch('FORTNOX_API_CLIENT_ID')
client_secret = ENV.fetch('FORTNOX_API_CLIENT_SECRET')
redirect_uri = ENV.fetch('FORTNOX_API_REDIRECT_URI')
scopes = ENV.fetch('FORTNOX_API_SCOPES')
credentials = "#{Base64.encode64("#{client_id}:#{client_secret}")}"
oauth_endpoint = 'https://apps.fortnox.se/oauth-v1'

def exit_if_empty(variable, message)
  if variable.empty?
    print "\n#{message}"
    exit
  end
end

exit_if_empty(client_id, 'Missing client ID! Exiting.')
exit_if_empty(client_secret, 'Missing client secret! Exiting')
exit_if_empty(redirect_uri, 'Missing redirect_uri! Exiting.')
exit_if_empty(scopes, 'Missing scopes! Exiting.')

auth_params =
  "client_id=#{CGI.escape(client_id)}" \
  "&redirect_uri=#{CGI.escape(redirect_uri)}" \
  "&scope=#{CGI.escape(scopes)}" \
  "&state=not-used" \
  "&access_type=offline" \
  "&response_type=code" \
  "&account_type=service"

authorize_url = "#{oauth_endpoint}/auth?#{auth_params}"

print "\nVisit the URL below, login with the account you want to authorize and grant the integration permission." \
      "Then copy the \"code\" from the URL parameters."
print "\n#{authorize_url}"

print "\nEnter authorization code: "
authorization_code = STDIN.gets.chomp

headers = {
  Authorization: "Basic #{credentials}",
  'Content-type' => 'application/x-www-form-urlencoded',
}

body = {
  grant_type: 'authorization_code',
  code: authorization_code,
  redirect_uri: redirect_uri
}

response = HTTParty.post("#{oauth_endpoint}/token", headers: headers, body: body)

if response.code != 200
  print "\nSomething went wrong."
  print "\nResponse code #{response.code}"
  print "\nResponse message: #{response.message}"
  print "\nResponse body: #{response.body}"
  print "\n"
  exit
end

print "There you go, here's your access token: #{response.parsed_response['access_token']}"
print "\nAnd here's your refresh token: #{response.parsed_response['refresh_token']}"
print "\nYour access token expires in #{response.parsed_response['expires_in']} seconds"
print "\nRequested scopes: #{response.parsed_response['scope']}"
print "\n"
